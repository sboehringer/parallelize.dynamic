% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rparallel.R
\docType{data}
\name{Apply_margin_error}
\alias{Apply_margin_error}
\alias{Apply}
\alias{Lapply}
\alias{Sapply}
\title{Expose an apply-loop to parallelization}
\format{An object of class \code{character} of length 1.}
\usage{
Apply_margin_error
}
\arguments{
\item{X}{See documentation for \code{apply}.}

\item{MARGIN}{See documentation for \code{apply}.}

\item{FUN}{See documentation for \code{sapply}.}

\item{simplify}{See documentation for \code{sapply}.}

\item{USE.NAMES}{See documentation for \code{sapply}.}

\item{.f}{See documentation for \code{lapply}.}

\item{l}{See documentation for \code{lapply}.}

\item{Lapply_config}{See documentation for \code{parallelize_intialize}.
Normally, this argument should be ignored.}

\item{Lapply_local}{Force local execution. Normally, this argument should be
ignored.}

\item{Lapply_chunk}{Normally, this argument should be ignored.}

\item{\dots}{See documentation for \code{apply}.}
}
\description{
Replacing and apply/lapply/sapply call with a Apply/Lapply/Sapply call makes
it amenable to analysis by the parallelize function that can determine
dynamic parallelism in running code.
}
\details{
Please refer
to the documentation of apply/lapply/sapply for further documenation. The
semantics of Apply/Lapply/Sapply are identical to apply/lapply/sapply. Using
these functions implies that you want the parallelization mechanism to be
applied to these loops.
}
\examples{

	r0 = sapply(1:10, function(x)x^2);
	r1 = Sapply(1:10, function(x)x^2);
	print(all(r0 == r1));

}
\seealso{
\code{\link{parallelize}}
}
\author{
Stefan BÃ¶hringer <r-packages@s-boehringer.org>
}
\keyword{iteration}
\keyword{parallel}
\keyword{programming}
