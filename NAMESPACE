export(Apply)
exportClasses(LapplyExecutionState)
exportClasses(LapplyFreezer)
exportClasses(ParallelizeBackend)
exportClasses(ParallelizeBackendLocal)
exportClasses(ParallelizeBackendOGSremote)
exportClasses(ParallelizeBackendSnow
Class \code{"LapplyState"}

This class is the base class for classes reflecting different stages of the
parallelization process: probing and running.)
export(Lapply)
export(Log)
export(Log.level)
export(Log.setLevel)
exportMethods(finalizeParallelization)
exportMethods(getResult)
exportMethods(initialize)
exportMethods(initScheduling)
exportMethods(isSynchroneous)
exportMethods(lapply_dispatch)
exportMethods(lapply_dispatchFinalize)
exportMethods(lapply_results)
exportMethods(parallelize_backend)
exportMethods(performParallelizationStep)
exportMethods(pollParallelization)
exportMethods(restoreParallelizationState)
exportMethods(saveParallelizationState)
exportMethods(scheduleNextParallelization)
export(parallelize)
export(parallelize_call)
export(parallelize_initialize)
export(parallelize_setEnable)
export(readFile)
export(Sapply)
export(tempcodefile)
